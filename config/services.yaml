# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    JoJoBizzareCoders\DigitalJournal\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    JoJoBizzareCoders\DigitalJournal\Entity\AbstractUserRepositoryInterface:
      factory: [ '@Doctrine\ORM\EntityManagerInterface', 'getRepository' ]
      arguments:
          $entityName: JoJoBizzareCoders\DigitalJournal\Entity\AbstractUserClass

    JoJoBizzareCoders\DigitalJournal\Entity\LessonRepositoryInterface:
        factory: [ '@Doctrine\ORM\EntityManagerInterface', 'getRepository' ]
        arguments:
            $entityName: JoJoBizzareCoders\DigitalJournal\Entity\LessonClass

    JoJoBizzareCoders\DigitalJournal\Entity\ParentRepositoryInterface:
        factory: [ '@Doctrine\ORM\EntityManagerInterface', 'getRepository' ]
        arguments:
            $entityName: JoJoBizzareCoders\DigitalJournal\Entity\AbstractUserClass

    JoJoBizzareCoders\DigitalJournal\Entity\ClassRepositoryInterface:
        factory: [ '@Doctrine\ORM\EntityManagerInterface', 'getRepository' ]
        arguments:
            $entityName: JoJoBizzareCoders\DigitalJournal\Entity\ClassClass

    JoJoBizzareCoders\DigitalJournal\Entity\ItemRepositoryInterface:
        factory: [ '@Doctrine\ORM\EntityManagerInterface', 'getRepository' ]
        arguments:
            $entityName: JoJoBizzareCoders\DigitalJournal\Entity\ItemClass

    JoJoBizzareCoders\DigitalJournal\Entity\TeacherRepositoryInterface:
        factory: [ '@Doctrine\ORM\EntityManagerInterface', 'getRepository' ]
        arguments:
            $entityName: JoJoBizzareCoders\DigitalJournal\Entity\AbstractUserClass

    JoJoBizzareCoders\DigitalJournal\Entity\StudentRepositoryInterface:
        factory: [ '@Doctrine\ORM\EntityManagerInterface', 'getRepository' ]
        arguments:
            $entityName: JoJoBizzareCoders\DigitalJournal\Entity\AbstractUserClass

    JoJoBizzareCoders\DigitalJournal\Entity\AssessmentReportRepositoryInterface:
        factory: [ '@Doctrine\ORM\EntityManagerInterface', 'getRepository' ]
        arguments:
            $entityName: JoJoBizzareCoders\DigitalJournal\Entity\ReportClass



    JoJoBizzareCoders\DigitalJournal\DoctrineEventSubscriber\EntityEventSubscriber:
        tags:
            - name: 'doctrine.event_subscriber'

    #  Monolog\Handler\TelegramBotHandler:
    #    arguments:
    #      $apiKey: '%env(TELEGRAMM_BOT_KEY)%'
    #      $channel: '%env(TELEGRAMM_CHANAL)%'
    #      $level: 'error'